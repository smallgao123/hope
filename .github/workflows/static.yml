<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>烟花特效 - 元旦快乐</title>
    <style>
        body {
            margin: 0;
            overflow: hidden;
            background: black;
            color: white;
            font-family: Arial, sans-serif;
        }

        canvas {
            display: block;
        }

        .message {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 4rem;
            color: gold;
            text-shadow: 0 0 10px gold, 0 0 20px orange;
            opacity: 0;
            animation: fadeInOut 4s ease-in-out infinite;
        }

        .countdown {
            position: absolute;
            top: 10%;
            left: 50%;
            transform: translateX(-50%);
            font-size: 3rem;
            color: white;
            text-shadow: 0 0 5px white, 0 0 10px gray;
        }

        @keyframes fadeInOut {
            0%, 100% {
                opacity: 0;
            }
            50% {
                opacity: 1;
            }
        }
    </style>
</head>
<body>
    <canvas id="fireworksCanvas"></canvas>
    <div class="message">元旦快乐！</div>
    <div class="countdown" id="countdown"></div>

    <script>
        const canvas = document.getElementById('fireworksCanvas');
        const ctx = canvas.getContext('2d');

        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;

        const fireworks = [];

        class Firework {
            constructor(x, y, color) {
                this.x = x;
                this.y = y;
                this.color = color;
                this.particles = [];

                for (let i = 0; i < 200; i++) {
                    this.particles.push(new Particle(this.x, this.y, this.color));
                }
            }

            update() {
                this.particles.forEach((particle, index) => {
                    particle.update();
                    if (particle.alpha <= 0) {
                        this.particles.splice(index, 1);
                    }
                });
            }

            draw() {
                this.particles.forEach(particle => particle.draw());
            }
        }

        class Particle {
            constructor(x, y, color) {
                this.x = x;
                this.y = y;
                this.color = color;
                this.size = Math.random() * 3 + 1;
                this.speedX = Math.random() * 8 - 4;
                this.speedY = Math.random() * 8 - 4;
                this.gravity = 0.05;
                this.alpha = 1;
                this.decay = Math.random() * 0.02 + 0.01;
            }

            update() {
                this.x += this.speedX;
                this.y += this.speedY;
                this.speedY += this.gravity;
                this.alpha -= this.decay;
            }

            draw() {
                ctx.save();
                ctx.globalAlpha = this.alpha;
                ctx.beginPath();
                ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
                ctx.fillStyle = this.color;
                ctx.fill();
                ctx.closePath();
                ctx.restore();
            }
        }

        function createFirework() {
            const x = Math.random() * canvas.width;
            const y = Math.random() * canvas.height / 2;
            const colors = ['#ff0000', '#ff6600', '#ffff00', '#00ff00', '#00ffff', '#0000ff', '#ff00ff', '#ffffff'];
            const color = colors[Math.floor(Math.random() * colors.length)];

            fireworks.push(new Firework(x, y, color));
        }

        function animate() {
            ctx.fillStyle = 'rgba(0, 0, 0, 0.2)';
            ctx.fillRect(0, 0, canvas.width, canvas.height);

            fireworks.forEach((firework, index) => {
                firework.update();
                firework.draw();
                if (firework.particles.length === 0) {
                    fireworks.splice(index, 1);
                }
            });

            requestAnimationFrame(animate);
        }

        setInterval(createFirework, 200);
        animate();

        // Countdown Timer
        function startCountdown() {
            const countdownElement = document.getElementById('countdown');
            const newYear = new Date(new Date().getFullYear() + 1, 0, 1, 0, 0, 0).getTime();

            function updateCountdown() {
                const now = new Date().getTime();
                const distance = newYear - now;

                const days = Math.floor(distance / (1000 * 60 * 60 * 24));
                const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                const seconds = Math.floor((distance % (1000 * 60)) / 1000);

                countdownElement.innerHTML = `距离元旦还有: ${days}天 ${hours}小时 ${minutes}分钟 ${seconds}秒`;

                if (distance < 0) {
                    clearInterval(countdownInterval);
                    countdownElement.innerHTML = "新年快乐！";
                }
            }

            updateCountdown();
            const countdownInterval = setInterval(updateCountdown, 1000);
        }

        startCountdown();
    </script>
</body>
</html>
